// <auto-generated />
using LinguTime.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LinguTime.Domain.Migrations
{
    [DbContext(typeof(LinguTimeContext))]
    [Migration("20190123202228_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LinguTime.Domain.Dto.CategoryDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.CustomWordMetadataDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CustomWordMetadata");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.CustomWordsDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("CustomWordsMetadataId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CustomWordsMetadataId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CustomWords");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.ExamplesDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sentence");

                    b.Property<int>("WordId");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("Examples");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.LanguageDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.UserPointsDto", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<int>("UserId");

                    b.Property<int>("Score");

                    b.HasKey("CategoryId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPoints");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.UsersDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.WordMetadataDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("WordMetadata");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.WordsDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LanguageId");

                    b.Property<string>("Name");

                    b.Property<int>("WordsMetadataId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("WordsMetadataId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.CustomWordMetadataDto", b =>
                {
                    b.HasOne("LinguTime.Domain.Dto.CategoryDto", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.CustomWordsDto", b =>
                {
                    b.HasOne("LinguTime.Domain.Dto.CustomWordMetadataDto", "CustomWordsMetadata")
                        .WithMany()
                        .HasForeignKey("CustomWordsMetadataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LinguTime.Domain.Dto.LanguageDto", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.ExamplesDto", b =>
                {
                    b.HasOne("LinguTime.Domain.Dto.WordsDto", "Word")
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.UserPointsDto", b =>
                {
                    b.HasOne("LinguTime.Domain.Dto.CategoryDto", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LinguTime.Domain.Dto.UsersDto", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.WordMetadataDto", b =>
                {
                    b.HasOne("LinguTime.Domain.Dto.CategoryDto", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinguTime.Domain.Dto.WordsDto", b =>
                {
                    b.HasOne("LinguTime.Domain.Dto.LanguageDto", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LinguTime.Domain.Dto.WordMetadataDto", "WordsMetadata")
                        .WithMany()
                        .HasForeignKey("WordsMetadataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
